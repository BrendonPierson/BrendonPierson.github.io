<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debugging on Biersons</title><link>https://biersons.com/tags/debugging/</link><description>Recent content in Debugging on Biersons</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 Jan 2022 13:02:35 -0500</lastBuildDate><atom:link href="https://biersons.com/tags/debugging/index.xml" rel="self" type="application/rss+xml"/><item><title>TIL Elixir - Inspect.Opts, deep cuts</title><link>https://biersons.com/posts/til-elixir-io-inspect-opts/</link><pubDate>Sun, 02 Jan 2022 13:02:35 -0500</pubDate><guid>https://biersons.com/posts/til-elixir-io-inspect-opts/</guid><description>Since the day I started picking up elixir I&amp;rsquo;ve been using IO.inspect/2&amp;rsquo;s to debug and check code outputs. Because it will return whatever its passed, you can paste |&amp;gt; IO.inspect()&amp;rsquo;s pretty much anywhere without changing the program. Even though I&amp;rsquo;ve been using this for years I recently learned about some new options to fine tune the inspect behavior.
See all the options here: https://hexdocs.pm/elixir/Inspect.Opts.html
Options I have pretty much always used :label</description></item></channel></rss>